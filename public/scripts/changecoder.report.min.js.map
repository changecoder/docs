{"version":3,"file":"changecoder.report.min.js","sources":["../core/send.ts","../core/performance.ts","../core/error.ts","../core/agent.ts","../index.ts"],"sourcesContent":["const imageReport = (url: string, data: any) => {\n    const img = new Image()\n    const params = Object.keys(data).reduce((a, key) => [`${key}=${encodeURIComponent(data[key])}`].concat(a), [])\n    img.src = `${url}?${params.join('&')}`\n}\n\nconst sendBeacon = (url: string, data: any) => {\n    const formData = new FormData()\n    Object.keys(data).forEach(key => {\n        let value = data[key]\n        if (typeof value !== 'string') {\n            value = JSON.stringify(value)\n        }\n        formData.append(key, value)\n    })\n    navigator.sendBeacon(url, data)\n}\n\nconst sendData = (url: string, data: any) => {\n    if ('sendBeacon' in navigator) {\n        sendBeacon(url, data)\n    } else {\n        imageReport(url, data)\n    }\n}\n\nexport default sendData","interface ResourceData {\n    name: string; \n    type: string; \n    duration: string | number; \n    decodedBodySize: number; \n    nextHopProtocol: string;\n}\n\nconst isSupported: boolean = !!window.performance\n\n/**\n * 统计页面性能\n */\nconst getTimePerformance = () => {\n    // 在新的标准(Navigation Timing Level 2 草案中), timing被移除, 因此我们这里不使用performance.timing\n    // 新标准的返回值为基于startTime时间的duration\n    const timing = isSupported && (window.performance.getEntriesByType(\"navigation\")[0] as PerformanceNavigationTiming)\n    if (!timing) {\n        return {}\n    }\n    return {\n        // 重定向时间\n        redirectTime: timing.redirectEnd - timing.redirectStart || 0,\n        // 查询缓存数据时间\n        appcacheTime: timing.domainLookupStart - timing.fetchStart || 0,\n        // DNS解析时间\n        dnsTime: timing.domainLookupEnd - timing.domainLookupStart || 0,\n        // TCP连接耗时\n        tcpConnectedTime: timing.connectEnd - timing.connectStart || 0,\n        // Request请求耗时\n        requestTime: timing.responseEnd - timing.requestStart || 0,\n        // 首字节耗费时间  \n        ttfbTime: timing.responseStart || 0,\n        // 首屏时间(在无侵入时使用,在head结束处或body开始处计算结束时间更准确)\n        firstPaintTime: timing.domInteractive || 0,\n        //dom渲染完成时间\n        domRenderEndTime: timing.domContentLoadedEventEnd || 0,\n        // 解析DOM树耗时\n        analysisTime: timing.domComplete - timing.domInteractive || 0,\n        //页面onload时间\n        onLoadTime: timing.loadEventEnd || 0,\n        // 页面准备时间 \n        prepareTime: timing.fetchStart || 0,\n        // 卸载页面的时间\n        unloadTime: timing.unloadEventEnd - timing.unloadEventStart || 0,     \n        // 首屏时间(在无侵入时使用,在body dom结束处计算结束时间更准确)\n        firstContentPaintTime: timing.domComplete || 0\n    }\n}\n\nconst getResourcePerformance = () => {\n    const resource = isSupported && (window.performance.getEntriesByType('resource') as PerformanceResourceTiming[])\n    if (!resource) {\n        return []\n    }\n    const resourceList: Array<ResourceData> = []\n    resource.forEach(item => {\n        const json = {\n            name: item.name,\n            type: item.initiatorType,\n            duration: item.duration.toFixed(2) || 0,\n            decodedBodySize: item.decodedBodySize || 0,\n            nextHopProtocol: item.nextHopProtocol\n        }\n        resourceList.push(json)\n    })\n    return resourceList\n}\n\nexport {\n    getTimePerformance,\n    getResourcePerformance\n}","interface ReportData {\n    resourceUrl?: string;\n    col?: number;\n    line?: number;\n}\n\ninterface InfoData {\n    time?: number;\n    msg?: string;\n    data?: ReportData;\n}\n\nconst createInfo = (data: InfoData) => Object.assign({}, {\n    time: new Date().getTime()\n}, data)\n\nconst processStack = (stack: string): ReportData => {\n    let resourceUrl: string = ''\n    let col: number = 0\n    let line: number = 0\n    let errs = stack.match(/\\(.+?\\)/)\n    if (errs && errs.length) {\n        let errString = errs[0]\n        errString = errString.replace(/\\w.+[js|html]/g, $1 => { \n            resourceUrl = $1\n            return '' \n        })\n        const errArr = errString.split(':')\n        try {\n            line = parseInt(errArr[1])\n            col = parseInt(errArr[2])\n        } catch (e) {\n\n        }\n    }\n    return {\n        resourceUrl,\n        col,\n        line\n    }\n}\nconst globalErrorListener = (errorList: Array<any>) => {\n    // 资源加载失败 （字体加载失败是否触发待确定）\n    window.addEventListener('error', (e: ErrorEvent) => {\n        const info = createInfo({\n            msg: e.error.stack ? e.error.stack.toString(): e.message,\n            data: {\n                resourceUrl: (e.target as HTMLLinkElement).href || (e.target as HTMLScriptElement | HTMLImageElement).src || (e.target as HTMLMediaElement).currentSrc,\n                line: e.lineno,\n                col: e.colno\n            }\n        })\n        if (e.target !== window) {\n            errorList.push(info)\n        }\n    })\n    // JS运行时失败\n    window.onerror = function (msg, _url, line, col, error) {\n        const info = createInfo({\n            msg: error?.stack ? error.stack.toString() : msg as string,\n            data: {\n                resourceUrl: _url,\n                line,\n                col\n            }\n        })\n        errorList.push(info)\n    }\n    // Promise错误\n    window.addEventListener('unhandledrejection', function (e: PromiseRejectionEvent) {\n        const error = e.reason\n        const stack = error.stack || ''\n        const info = createInfo({\n            msg: error.message || '',\n            data: processStack(stack)\n        })\n        errorList.push(info)\n    })\n    // 页面奔溃处理\n}\n\nexport {\n    globalErrorListener as registerErrorEvent\n}","\n// 系统\nexport let system = 'unknow'\n// 系统版本\nexport let systemVersion = 'unknow'\n// 平台\nexport let platform = 'unknow'\n// 内核\nexport let engine = 'unknow'\n// 内核版本\nexport let engineVersion = 'unknow'\n// 浏览器\nexport let browser = 'unknow'\n// 浏览器版本\nexport let browserVersion = 'unknow'\n// 外壳(例如微信浏览器， QQ浏览器等)\nexport let shell = 'unknow'\n// 外壳版本\nexport let shellVersion = 'unknow'\n\nexport const ua = navigator.userAgent.toLowerCase()\n\nconst testUa = (regExp: RegExp): boolean => regExp.test(ua)\nconst testVs = (regExp: RegExp): string | undefined => ua.match(regExp)?.toString().replace(/[^0-9|_.]/g, '').replace(/_/g, '.')\nconst setSystemVersion = (regExp: RegExp): void => {\n    const value = testVs(regExp)\n    if (value) {\n        systemVersion = value\n    }\n}\nconst setEngineVersion = (regExp: RegExp): void => {\n    const value = testVs(regExp)\n    if (value) {\n        engineVersion = value\n    }\n}\nconst setBrowserVersion = (regExp: RegExp): void => {\n    const value = testVs(regExp)\n    if (value) {\n        browserVersion = value\n    }\n}\nconst setShellVersion = (regExp: RegExp): void => {\n    const value = testVs(regExp)\n    if (value) {\n        shellVersion = value\n    }\n}\n\nconst winRegExp = /windows|win32|win64|wow32|wow64/g\nconst macOSRegExp = /macintosh|macintel/g\nconst androidRegExp = /android|adr/g\nconst iosRegExp = /ios|iphone|ipad|ipod|iwatch/g\n\n\nexport const isWindows = testUa(winRegExp)\nexport const isMacos = testUa(macOSRegExp)\nexport const isAndroid = testUa(androidRegExp)\nexport const isIos = testUa(iosRegExp)\n\nif (isWindows) {\n    system = 'windows'\n} else if (isMacos) {\n    system = 'macos'\n} else if (isAndroid) {\n    system = 'android'\n} else if (isIos) {\n    system = 'ios'\n}\n\nif (isWindows) {\n    if (testUa(/windows nt 5.0|windows 2000/g)) {\n        systemVersion = '2000'\n    } else if (testUa(/windows nt 5.1|windows xp/g)) {\n        systemVersion = 'xp'\n    } else if (testUa(/windows nt 5.2|windows 2003/g)) {\n        systemVersion = '2003'\n    } else if (testUa(/windows nt 6.0|windows vista/g)) {\n        systemVersion = 'vista'\n    } else if (testUa(/windows nt 6.1|windows 7/g)) {\n        systemVersion = '7'\n    } else if (testUa(/windows nt 6.2|windows 8/g)) {\n        systemVersion = '8'\n    } else if (testUa(/windows nt 6.3|windows 8.1/g)) {\n        systemVersion = '8.1'\n    } else if (testUa(/windows nt 10.0|windows 10/g)) {\n        systemVersion = '10'\n    }\n} else if (isMacos) {\n    setSystemVersion(/os x [\\d._]+/g)\n} else if (isAndroid) {\n    setSystemVersion(/os x [\\d._]+/g)\n} else if (isIos) {\n    setSystemVersion(/os [\\d._]+/g)\n}\n\nif (isWindows || isMacos) {\n    platform = 'desktop'\n} else if (isAndroid || isIos || testUa(/mobile/g)) {\n    platform = 'mobile'\n}\n\nif (testUa(/applewebkit/g)) {\n    engine = 'webkit'\n    if (testUa(/edge/g)) {\n        browser = 'edge'\n    } else if (testUa(/opr/g)) {\n        browser = 'opera'\n    } else if (testUa(/chrome/g)) {\n        browser = 'chrome'\n    } else if (testUa(/safari/g)) {\n        browser = 'safari'\n    }\n} else if (testUa(/gecko/g) && testUa(/firefox/g)) {\n    engine = 'gecko'\n    browser = 'firefox'\n} else if (testUa(/presto/g)) {\n    engine = 'presto'\n    browser = 'opera'\n} else if (testUa(/trident|compatible|msie/g)) {\n    engine = 'trident'\n    browser = 'ie'\n}\n\n\nif (engine === 'webkit') {\n    setEngineVersion(/applewebkit\\/[\\d._]+/g)\n} else if (engine === 'gecko') {\n    setEngineVersion(/gecko\\/[\\d._]+/g)\n} else if (engine === 'presto') {\n    setEngineVersion(/presto\\/[\\d._]+/g)\n} else if (engine === 'trident') {\n    setEngineVersion(/trident\\/[\\d._]+/g)\n}\n\nif (browser === 'chrome') {\n    setBrowserVersion(/chrome\\/[\\d._]+/g);\n} else if (browser === 'safari') {\n    setBrowserVersion(/version\\/[\\d._]+/g);\n} else if (browser === 'firefox') {\n    setBrowserVersion(/firefox\\/[\\d._]+/g);\n} else if (browser === 'opera') {\n    setBrowserVersion(/opr\\/[\\d._]+/g);\n} else if (browser === 'iexplore') {\n    setBrowserVersion(/(msie [\\d._]+)|(rv:[\\d._]+)/g);\n} else if (browser === 'edge') {\n    setBrowserVersion(/edge\\/[\\d._]+/g);\n}\n\nif (testUa(/micromessenger/g)) {\n    shell = 'wechat'\n    setShellVersion(/micromessenger\\/[\\d._]+/g)\n} else if (testUa(/qqbrowser/g)) {\n    shell = 'qq' // QQ浏览器\n    setShellVersion(/qqbrowser\\/[\\d._]+/g)\n} else if (testUa(/ucbrowser/g)) {\n    shell = 'uc'\n    setShellVersion(/ucbrowser\\/[\\d._]+/g)\n} else if (testUa(/qihu 360se/g)) {\n    shell = '360' // 360浏览器(无版本)\n} else if (testUa(/metasr/g)) {\n    shell = 'sougou' // 搜狗浏览器(无版本)\n} else if (testUa(/lbbrowser/g)) {\n    shell = 'liebao' // 猎豹浏览器(无版本)\n} else if (testUa(/maxthon/g)) {\n    shell = 'maxthon' // 遨游浏览器\n    setShellVersion(/maxthon\\/[\\d._]+/g)\n}","import { \n    XhrError, \n    XhrRequestConfig, \n    XhrResponse \n} from 'ajax-hook'\nimport * as AjaxHook from 'ajax-hook'\n\nimport sendData from './core/send'\nimport {\n    getTimePerformance,\n    getResourcePerformance\n} from './core/performance'\nimport { registerErrorEvent } from './core/error'\n\nimport * as clientData from './core/agent'\n\ninterface ReportOptions {\n    domain?: string; // 上报地址\n    delay?: number; // 上报延迟时间, 单位毫秒\n    isAjax?: boolean; // 是否监听上报Ajax请求数据\n    filterUrl?: Array<string>; // AJAX请求时需要过滤的URL信息\n    isPage?: boolean; // 是否上报页面性能数据\n    isError?: boolean; // 是否监听上报错误信息\n    extra?: {\n        [key: string]: string;\n    } // 自定义信息\n}\n\ninterface AjaxData {\n    id: string;\n    url: string;\n    method: string;\n    status: number;\n    statusText: string;\n    errorType?: string;\n    requestTime: number;\n    responseTime: number;\n}\n\ninterface Conf {\n    resourceList: Array<any>;\n    performance: {\n        [key: string]: number | undefined;\n    };\n    errorList: Array<any>;\n    ajaxList: {\n        [id: string]: AjaxData\n    };\n    page: string;\n}\n\nconst defaultOptions: ReportOptions = {\n    domain: 'https://api.changecoder.com/v1/proxy/report',\n    delay: 1000,\n    isAjax: true,\n    filterUrl: [],\n    isPage: true,\n    isError: true\n}\n\nconst generateId = (url: string) => `${Date.now()}-${url}`\n\nexport default class Report {\n    opts: ReportOptions\n    conf: Conf\n    constructor(opts: ReportOptions) {\n        this.opts = Object.assign({}, defaultOptions, opts)\n        this.initConf()\n    }\n\n    initConf() {\n        this.conf = {\n             //资源列表 \n             resourceList: [],\n             // 页面性能列表\n             performance: {},\n             // 错误列表\n             errorList: [],\n             // ajax信息列表\n             ajaxList: {},\n             // 当前页面\n             page: window.location.href\n        }\n    }\n\n    sendReport() {\n        const url = this.opts.domain\n        const data = Object.assign({}, clientData)\n        sendData(url as string, data)\n    }\n\n    start() {\n        const { isAjax } = this.opts\n        if (isAjax) {\n            AjaxHook.proxy({\n                 //请求发起前进入\n                onRequest: (config: XhrRequestConfig, handler) => {\n                    const id = generateId(config.url)\n                    this.conf.ajaxList[id] = {\n                        id,\n                        url: config.url,\n                        method: config.method,\n                        status: 0,\n                        statusText: '',\n                        errorType: '',\n                        requestTime: Date.now(),\n                        responseTime: 0\n                    }\n                    config.user = id\n                    handler.next(config);\n                },\n                //请求发生错误时进入，比如超时；注意，不包括http状态码错误，如404仍然会认为请求成功\n                onError: (err: XhrError, handler) => {\n                    const id = err.config.user\n                    Object.assign({}, this.conf.ajaxList[id], {\n                        responseTime: Date.now(),\n                        errorType: err.type\n                    })\n                    handler.next(err)\n                },\n                //请求成功后进入\n                onResponse: (response: XhrResponse, handler) => {\n                    const id = response.config.user\n                    Object.assign({}, this.conf.ajaxList[id], {\n                        responseTime: Date.now(),\n                        status: response.status,\n                        statusText: response.statusText\n                    })\n                    handler.next(response)\n                }   \n            })\n        }\n        if (this.opts.isPage) {\n            window.requestAnimationFrame(() => {\n                const resourceData = getResourcePerformance()\n                const perforamnceData = getTimePerformance()\n                this.conf.performance = perforamnceData\n                this.conf.resourceList = resourceData\n            })\n        }\n        if (this.opts.isError) {\n            registerErrorEvent(this.conf.errorList)\n        }\n    }\n\n    getClientData() {\n        return clientData\n    }\n}"],"names":["sendData","url","data","navigator","formData","FormData","Object","keys","forEach","key","value","JSON","stringify","append","sendBeacon","img","Image","params","reduce","a","encodeURIComponent","concat","src","join","imageReport","isSupported","window","performance","createInfo","assign","time","Date","getTime","processStack","stack","resourceUrl","col","line","errs","match","length","errString","replace","$1","errArr","split","parseInt","e","system","systemVersion","platform","engine","engineVersion","browser","browserVersion","shell","shellVersion","ua","userAgent","toLowerCase","testUa","regExp","test","testVs","toString","setSystemVersion","setEngineVersion","setBrowserVersion","setShellVersion","isWindows","isMacos","isAndroid","isIos","defaultOptions","domain","delay","isAjax","filterUrl","isPage","isError","opts","conf","constructor","this","initConf","resourceList","errorList","ajaxList","page","location","href","sendReport","clientData","start","AjaxHook","proxy","onRequest","config","handler","id","now","method","status","statusText","errorType","requestTime","responseTime","user","next","onError","err","type","onResponse","response","requestAnimationFrame","resourceData","resource","getEntriesByType","item","json","name","initiatorType","duration","toFixed","decodedBodySize","nextHopProtocol","push","getResourcePerformance","perforamnceData","timing","redirectTime","redirectEnd","redirectStart","appcacheTime","domainLookupStart","fetchStart","dnsTime","domainLookupEnd","tcpConnectedTime","connectEnd","connectStart","responseEnd","requestStart","ttfbTime","responseStart","firstPaintTime","domInteractive","domRenderEndTime","domContentLoadedEventEnd","analysisTime","domComplete","onLoadTime","loadEventEnd","prepareTime","unloadTime","unloadEventEnd","unloadEventStart","firstContentPaintTime","getTimePerformance","addEventListener","info","msg","error","message","target","currentSrc","lineno","colno","onerror","_url","reason","getClientData"],"mappings":"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"}